#%RAML 0.2
---
title: Example API
version: v1
baseUri: http://example.com
resourceTypes:
  - base:
      get?:
        responses: &standardResponses
          200:
            description: OK
      head?:
        responses: *standardResponses
      put?:
        responses: *standardResponses
      patch?:
        responses: *standardResponses
      post?:
        responses: *standardResponses
      delete?:
        responses: *standardResponses
  - collection:
      type: base
      get:
        is: [ paged ]
      post:
        responses:
          201:
            description: Created
  - member:
      type: base
      get: {}
      head: {}
      put: {}
      post: {}
      patch: {}
      delete: {}
traits:
  - paged:
      displayName: paged
      queryParameters:
        page:
          type: integer
          displayName: start
          description: The page number to view
  - secured:
      displayName: secured
      headers:
        Authorization:
          description: The auth token for this request
      responses:
        401:
          description: Unauthorized
# Test nested routes
/collection:
  type: collection
  /{collectionId}:
    type: member
    /{nestedId}:
      type: member
# Test a dynamic vs static route clash
/{collection}:
  type: collection
# Test using variables with text
/mixed{variable}{route}:
  type: member
# Test validation
/validation:
  /string:
    /{basic}:
      type: member
      uriParameters:
        basic:
          type: string
          required: false
    /{enum}:
      type: member
      uriParameters:
        enum:
          type: string
          enum: ['test']
    /{pattern}:
      type: member
      uriParameters:
        pattern:
          type: string
          pattern: "^test$"
    /{minLength}:
      type: member
      uriParameters:
        minLength:
          type: string
          minLength: 5
    /{maxLength}:
      type: member
      uriParameters:
        maxLength:
          type: string
          maxLength: 5
    /{required}:
      type: member
      uriParameters:
        required:
          type: string
          required: true
  /number:
    /{basic}:
      type: member
      uriParameters:
        basic:
          type: number
          required: false
    /{minimum}:
      type: member
      uriParameters:
        minimum:
          type: number
          minimum: 5
    /{maximum}:
      type: member
      uriParameters:
        maximum:
          type: number
          maximum: 5
    /{required}:
      type: member
      uriParameters:
        required:
          type: number
          required: true
  /integer:
    /{basic}:
      type: member
      uriParameters:
        basic:
          type: integer
          required: false
    /{minimum}:
      type: member
      uriParameters:
        minimum:
          type: integer
          minimum: 5
    /{maximum}:
      type: member
      uriParameters:
        maximum:
          type: integer
          maximum: 5
    /{required}:
      type: member
      uriParameters:
        required:
          type: integer
          required: true
  /date:
    /{basic}:
      type: member
      uriParameters:
        basic:
          type: date
          required: false
    /{required}:
      type: member
      uriParameters:
        required:
          type: date
          required: true
  /boolean:
    /{basic}:
      type: member
      uriParameters:
        basic:
          type: boolean
          required: false
    /{required}:
      type: member
      uriParameters:
        required:
          type: boolean
          required: true
